GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON. Зайти на https://github.com/. Repositories -> New -> Create a new repository (Repository name - JSON, Public, Add a README file) -> Create repository. Скопировать ссылку.
 5. Клонировать репозиторий JSON на локальный компьютер. git clone https://github.com/MaryCurious/JSON
 6. Внутри локального JSON создать файл “new.json”. touch new.json
 7. Добавить файл под гит. git add new.json
 8. Закоммитить файл. git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий. git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. vim new.json ESC -> :wq
 11. Отправить изменения на внешний репозиторий. git add new.json, git commit -m "edit in new.json file", потом git push
 12. Создать файл preferences.json touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. vim preferences.json ESC -> :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON touch skills.json, vim skills.json
 15. Отправить сразу 2 файла на внешний репозиторий. git add ., git commit -m "add 2 new files", git push
 16. На веб интерфейсе создать файл bug_report.json. В своем репозитории JSON -> Add file -> Create new file -> Ввести название: bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Открыть файл bug_report.json -> Нажать Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON git fetch git pull

 XML
 21. Создать внешний репозиторий c названием XML. Зайти на https://github.com/. Repositories -> New -> Create a new repository (Repository name - XML, Public, Add a README file) -> Create repository. Скопировать ссылку.
 22. Клонировать репозиторий XML на локальный компьютер. git clone https://github.com/MaryCurious/XML
 23. Внутри локального XML создать файл “new.xml”. touch new.xml
 24. Добавить файл под гит. git add new.xml
 25. Закоммитить файл. git commit -m "add new.xml file"
 26. Отправить файл на внешний GitHub репозиторий. git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. vim new.xml ESC -> :wq
 28. Отправить изменения на внешний репозиторий. git add new.xml, git commit -m "edit new.xml file", потом git push
 29. Создать файл preferences.xml touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. vim preferences.xml ESC -> :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML 
 32. Сделать коммит в одну строку. git commit -am
 33. Отправить сразу 2 файла на внешний репозиторий. git add ., git commit -m "add 2 new files", git push
 34. На веб интерфейсе создать файл bug_report.xml. В своем репозитории XML -> Add file -> Create new file -> Ввести название: bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. Открыть файл bug_report.xml -> Нажать Edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML git fetch git pull
 
 TXT
 1. Создать внешний репозиторий c названием TXT. Зайти на https://github.com/. Repositories -> New -> Create a new repository (Repository name - TXT, Public, Add a README file) -> Create repository. Скопировать ссылку.
 2. Клонировать репозиторий TXT на локальный компьютер. git clone https://github.com/MaryCurious/TXT
 3. Внутри локального TXT создать файл “new.txt”. touch new.txt
 4. Добавить файл под гит. git add new.txt
 5. Закоммитить файл. git commit -m "add new.txt file"
 6. Отправить файл на внешний GitHub репозиторий. git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. vim new.txt ESC -> :wq
 8. Отправить изменения на внешний репозиторий. git add new.txt, git commit -m "add new.txt file", git push
 9. Создать файл preferences.txt touch preferences.txt
 10. В файл preferences.txt добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. vim preferences.txt ESC -> :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT touch sklls.txt vim sklls.txt ESC -> :wq
 12. Сделать коммит в одну строку. git commit -am
 13. Отправить сразу 2 файла на внешний репозиторий. git add ., git commit -m "add 2 new files", git push
 14. На веб интерфейсе создать файл bug_report.txt. В своем репозитории TXT -> Add file -> Create new file -> Ввести название: bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. Открыть файл bug_report.txt -> Нажать Edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Нажать Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT git fetch git pull